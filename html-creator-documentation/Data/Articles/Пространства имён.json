[
  {
    "Type": "large-block",
    "Title": "Пространство имён «html_creator_library»",
    "Elements": [
      {
        "Type": "big-block",
        "Title": "class HTML",
        "Elements": [
          {
            "Type": "small-block",
            "Elements": [
              {
                "Type": "code",
                "ListValues": [ "HTML(Body body = null, Head head = null)" ]
              },
              {
                "Type": "description",
                "Value": "Конструктор класса. Передается body и head html документа для последующего сохранения."
              }
            ]
          },
          {
            "Type": "small-block",
            "Elements": [
              {
                "Type": "code",
                "ListValues": [ "void SetStyles(params Style[] styles)" ]
              },
              {
                "Type": "description",
                "Value": "Метод для добавления стилей. В styles через запятую можно добавить сколько угодно объектов, которые наследуются от класса Style."
              }
            ]
          },
          {
            "Type": "small-block",
            "Elements": [
              {
                "Type": "code",
                "ListValues": [ "void SaveFile(string path = “../../../../”, string htmlName = null, string cssName = null)" ]
              },
              {
                "Type": "description",
                "Value": "Метод для сохранения файлов сайта. Path – путь к файлам; htmlName – название html файла (при указании нужно писать в конце «.html»; cssName – Название css файла (при указании нужно писать в конце «.css»."
              }
            ]
          }
        ]
      },
      {
        "Type": "big-block",
        "Title": "class Head",
        "Elements": [
          {
            "Type": "small-block",
            "Elements": [
              {
                "Type": "code",
                "ListValues": [
                  "void SetContext(params HeadComponent[] components)"
                ]
              },
              {
                "Type": "description",
                "Value": "Устанавливает содержимое тега \u003Chead\u003E в html файле. Через запятую можно добавить сколько угодно объектов, которые наследуются от класса HeadComponent."
              }
            ]
          }
        ]
      },
      {
        "Type": "big-block",
        "Title": "class HtmlAttribute",
        "Elements": [
          {
            "Type": "small-block",
            "Elements": [
              {
                "Type": "description",
                "Value": "HtmlAttribute в качестве возвращаемого значения используется для того, чтобы перечисленные ниже методы можно было писать в цепочке, например:"
              },
              {
                "Type": "code",
                "ListValues": [
                  "new Line(new HtmlAttribute().Color(\u0022red\u0022).Size(\u002220px\u0022).Width(\u002290%\u0022))"
                ]
              }
            ]
          },
          {
            "Type": "small-block",
            "Elements": [
              {
                "Type": "code",
                "ListValues": [
                  "HtmlAttribute Class(string className)"
                ]
              },
              {
                "Type": "description",
                "Value": "Добавляет атрибут class=\u0022{className}\u0022."
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "Type": "large-block",
    "Title": "FFFF"
  }
]