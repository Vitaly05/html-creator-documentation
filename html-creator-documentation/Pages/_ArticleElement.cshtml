@using html_creator_documentation.Data;
@using html_creator_documentation.Models;
@model ArticleElementModel

@if (Model.ArticleElement.Type == ArticleElementsTypes.Description)
{
    <div class="text block block-item" data-block-type="@Model.ArticleElement.Type">
        @await Html.PartialAsync("_ArticleEditTools", new ArticleEditToolsModel { Target = "block", CanEdit = Model.CanEdit })
        <div class="value">@Model.ArticleElement.Value</div>
    </div>
}
else if (Model.ArticleElement.Type == ArticleElementsTypes.List)
{
    <div class="list block block-item" data-block-type="@Model.ArticleElement.Type">
        @await Html.PartialAsync("_ArticleEditTools", new ArticleEditToolsModel { Target = "block", CanEdit = Model.CanEdit })
        @foreach (var value in Model.ArticleElement.ListValues)
        {
            @if (!String.IsNullOrWhiteSpace(value))
            {
                <div class="list-item flex">
                    <img src="Res/List Item.svg" alt="-">
                    <div class="value">@value</div>
                </div>
            }
        }
    </div>
}
else if (Model.ArticleElement.Type == ArticleElementsTypes.Tip)
{
    <div class="block flex column-direction jc-space-between block-item" data-block-type="@Model.ArticleElement.Type">
        @await Html.PartialAsync("_ArticleEditTools", new ArticleEditToolsModel { Target = "block", CanEdit = Model.CanEdit })
        <div class="tip">
            <div class="flex">
                <img src="Res/Tip.svg" alt="Tip">
                <div class="title">Совет</div>
            </div>
            <div class="value">@Model.ArticleElement.Value</div>
        </div>
    </div>
}
else if (Model.ArticleElement.Type == ArticleElementsTypes.Code)
{
    <div class="block block-item" data-block-type="@Model.ArticleElement.Type">
        @await Html.PartialAsync("_ArticleEditTools", new ArticleEditToolsModel { Target = "block", CanEdit = Model.CanEdit })
        <div class="code">

            @{
                int linesCount = 1;
            }
            @for (int iii = 0; iii < Model.ArticleElement.ListValues.Count(); ++iii)
            {
                @if (!String.IsNullOrWhiteSpace(Model.ArticleElement.ListValues[iii]))
                {
                    <div class="line">@(linesCount++)</div>
                    <div class="value">@Model.ArticleElement.ListValues[iii]</div>
                }
            }
        </div>
    </div>
}
else
{
    @await Html.PartialAsync("_ArticleBlock", new ArticleElementModel {
        CanEdit = Model.CanEdit,
        ArticleElement = Model.ArticleElement
    })
}
